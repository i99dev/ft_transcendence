// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model User {
  id           Int        @id @default(autoincrement())
  login        String     @unique
  username     String     @unique
  email        String     @unique
  status       UserStatus @default(OFFLINE)
  first_name   String?
  last_name    String?
  created_at   DateTime   @default(now())
  last_login   DateTime   @default(now())
  image        String?
  total_wins   Int        @default(0)
  total_loses  Int        @default(0)
  exp_level    Int        @default(0)
  points       Int        @default(0)
  two_fac_auth Boolean    @default(false)
  achievements Achievement[]  @relation("UserAchievements")
  power_ups    PowerUp[] @relation("UserPowerUps")
  friend_to    User[]  @relation("UserFriends")
  friends      User[]  @relation("UserFriends")
  chat    ChatUser[]
  message     Message[]
}

model PowerUp {
  id     Int    @id @default(autoincrement())
  type   String @unique @default("default")
  period Int    @default(0)
  users  User[] @relation("UserPowerUps")
}

model Achievement {
  id          Int     @id @default(autoincrement())
  type        String  @unique @default("default")
  description String?
  points      Int     @default(0)
  users       User[]  @relation("UserAchievements")
}

model Chat {
  id             Int            @id @default(autoincrement())
  room_id        String         @unique
  name           String?
  image          String?
  type           chatType   @default(PUBLIC)
  password       String?
  created_at     DateTime       @default(now())
  chat_user ChatUser[]
  messages       Message[]
}

model ChatUser {
  id           Int      @id @default(autoincrement())
  role         ChatUserRole   @default(MEMBER)
  status       String   @default("default")
  created_at   DateTime @default(now())
  user_login   String
  chat_room_id     String
  chat    Chat @relation(fields: [chat_room_id], references: [room_id])
  user         User     @relation(fields: [user_login], references: [login])
  @@unique([chat_room_id, user_login], name: "chat_user")
}

model Message {
  id           Int      @id @default(autoincrement())
  content      String
  created_at   DateTime @default(now())
  chat_room_id String
  sender_login String
  chat    Chat @relation(fields: [chat_room_id], references: [room_id])
  sender       User     @relation(fields: [sender_login], references: [login])
}

enum UserStatus {
  OFFLINE
  ONLINE
  LIVE
}

enum chatType {
  PUBLIC
  PRIVATE
  PROTETED
  DIRECT
}

enum ChatUserRole {
  OWNER
  ADMIN
  MEMBER
}